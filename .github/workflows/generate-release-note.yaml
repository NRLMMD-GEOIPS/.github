name: Generate Release Note with Brassy

on:
  workflow_call:
    inputs:
      base_branch:
        description: 'Base branch for the pull request'
        required: true
        type: string

jobs:
  generate_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Extract branch name
        id: extract_branch
        run: |
          branch_name=$(git rev-parse --abbrev-ref HEAD)
          echo "branch=${branch_name}" >> $GITHUB_OUTPUT
          echo "Working branch is ${branch_name} and base branch is ${{ inputs.base_branch }}"

      - name: Extract version
        id: extract_version
        run: |
          export latest_tag=`git -C . tag --sort=-creatordate | grep -v osr | head -n 1`
          echo "Version is $latest_tag"
          echo "version=${latest_tag}" >> $GITHUB_OUTPUT

      - name: Install Brassy
        run: pip3 install brassy

      - name: Prepare Release Note Header
        run: |
          touch RELEASE_NOTE_HEADER
          echo ".. dropdown:: Distribution Statement" >> RELEASE_NOTE_HEADER
          echo " " >> RELEASE_NOTE_HEADER
          echo " | # # # This source code is protected under the license referenced at" \
          >> RELEASE_NOTE_HEADER
          echo " | # # # https://github.com/NRLMMD-GEOIPS." \
          >> RELEASE_NOTE_HEADER

      - name: Generate Release Note with Brassy
        run: |
          export output_file=v$(echo "${{ steps.extract_version.outputs.version }}" | tr . _).rst
          echo $output_file

          brassy ./docs/source/releases/latest \
          --output-file ./docs/source/releases/$output_file \
          --prefix-file RELEASE_NOTE_HEADER \
          --no-rich \
          --release-version ${{ steps.extract_version.outputs.version }}

          rm RELEASE_NOTE_HEADER

      - name: Setup git enviorment 
        run: | 
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@github.com'
          git checkout -b update-release-note-${{ steps.extract_branch.outputs.branch }}

      - name: Delete pushed tag
        run: |
          git push --delete origin ${{ steps.extract_version.outputs.version }}
          git tag --delete ${{ steps.extract_version.outputs.version }}
          
      - name: Commit new release note
        run: |
          git add ./docs/source/releases/*.rst
          git commit -m "Add Built Release Note"
          
      - name: Delete old yaml files
        run: |
          git rm ./docs/source/releases/latest/*.yaml
          git commit -m "Remove old yaml files"
          
      - name: Tag commit
        run: |
          git tag ${{ steps.extract_version.outputs.version }}

      - name: Push new release note to branch
        run: |
          git push --set-upstream origin update-release-note-${{ steps.extract_branch.outputs.branch }}
          git push --set-upstream origin update-release-note-${{ steps.extract_branch.outputs.branch }} --tags
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --base ${{ inputs.base_branch }} \
            --head update-release-note-${{ steps.extract_branch.outputs.branch }} \
            --title 'Merge new release note into ${{ inputs.base_branch }}' \
            --body 'Created by manually run GitHub action.'

